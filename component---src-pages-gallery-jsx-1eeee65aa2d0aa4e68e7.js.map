{"version":3,"sources":["webpack:///./src/components/Thumbnail.jsx","webpack:///./src/pages/gallery.jsx"],"names":["Thumbnail","props","style","width","height","Gallery","data","Header","className","sx","display","gridGap","gridTemplateColumns","allFile","edges","map","img","key","node","id","alt","image"],"mappings":"iKAaeA,EARG,SAAC,GAAD,IAAMC,EAAN,2BAChB,kBAAC,IAAD,eACEC,MAAO,CAAEC,MAAO,QAASC,OAAQ,UAC7BH,KC8DOI,UAnCC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,6BACE,kBAACC,EAAA,EAAD,MACA,kBAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACFC,QAAS,OACTC,QAAS,EACTC,oBAAqB,yCAGtBN,EAAKO,QAAQC,MAAMC,KAAI,SAACC,GACvB,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAIE,KAAKC,GACdhB,MAAO,IACPiB,IAAI,GACJC,MAAOL,EAAIE","file":"component---src-pages-gallery-jsx-1eeee65aa2d0aa4e68e7.js","sourcesContent":["import React from 'react';\n// import { Box } from 'rebass';\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\n\nconst Thumbnail = ({ ...props }) => (\n  <GatsbyImage \n    style={{ width: '200px', height: '200px' }} \n    {...props} />\n);\n\nThumbnail.propTypes = {};\n\nexport default Thumbnail;\n","import React from 'react';\nimport { shape, any, arrayOf } from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { Box } from 'rebass';\nimport Header from '../components/Header';\nimport Thumbnail from '../components/Thumbnail';\n\nexport const thumbFluid = graphql`\n  fragment thumbFluid on File {\n    childImageSharp {\n      gatsbyImageData(\n        layout: FULL_WIDTH\n        placeholder: BLURRED\n      )\n    }\n  }\n`;\n\nexport const query = graphql`\n  query {\n    allFile(\n      filter: { relativePath: { regex: \"/pics/.*jpg/\" } }\n      sort: { fields: name }\n    ) {\n      edges {\n        node {\n          id\n          name\n          ...thumbFluid\n        }\n      }\n    }\n  }\n`;\n\nconst Gallery = ({ data }) => {\n  return (\n    <div>\n      <Header />\n      <Box\n        className=\"imgs\"\n        sx={{\n          display: 'grid',\n          gridGap: 3, // theme.space[3]\n          gridTemplateColumns: 'repeat(auto-fit, minmax(128px, 1fr))',\n        }}\n      >\n        {data.allFile.edges.map((img) => {\n          return (\n            <Thumbnail\n              key={img.node.id}\n              width={200}\n              alt=\"\"\n              image={img.node}\n            />\n          );\n        })}\n      </Box>\n    </div>\n  );\n};\n\nGallery.propTypes = {\n  data: shape({\n    allFile: shape({\n      edges: arrayOf(any),\n    }),\n  }),\n};\n\nexport default Gallery;\n"],"sourceRoot":""}